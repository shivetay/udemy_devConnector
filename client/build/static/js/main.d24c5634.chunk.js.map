{"version":3,"sources":["redux/AlertReducer.js","utils/utils.js","redux/ProfileReducer.js","redux/AuthReducer.js","redux/store.js","components/layout/Header/Header.js","components/layout/Header/HeaderContainer.js","components/layout/MainLayout/MainLayout.js","components/views/Landing/Landing.js","components/features/Login/Login.js","components/features/Login/LoginContainer.js","components/features/Register/Register.js","components/features/Register/RegisterContainer.js","components/common/Alerts/Alerts.js","components/common/Alerts/AlertsContainer.js","components/common/Buttons/ProfileEditButtons.js","components/views/Dashboard/Dashboard.js","components/views/Dashboard/DashboardContainer.js","components/common/Routing/PrivateRoute.js","components/common/Routing/PrivateRouteContainer.js","components/views/Profile/CreateProfile.js","components/views/Profile/CreateProfileContainer.js","components/features/EditProfile/EditProfile.js","components/features/EditProfile/EditProfileContainer.js","App.js","serviceWorker.js","index.js"],"names":["createActionName","name","SET_ALERT","REMOVE_ALERT","setAlert","msg","alertType","dispatch","id","uuidv4","payload","type","setTimeout","removeAlertAction","initialState","setAuthToken","token","axios","defaults","headers","common","GET_PROFILE","ERROR_PROFILE","CLEAR_PROFILE","getProfileAction","getProfileError","fetchCurrentUser","a","get","res","data","response","statusText","status","createUserProfile","formData","history","edit","config","post","push","errors","forEach","error","profile","profiles","repos","loading","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","registerFailAction","userAuthError","loginFailAction","loadUser","localStorage","logoutUser","logoutAction","getItem","isAuthenticated","user","reducers","auth","state","action","setItem","removeItem","alerts","filter","alert","Object","keys","item","statePart","combinedReducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Header","userLogout","authLinks","to","className","onClick","href","guestLinks","connect","MainLayout","children","Login","email","password","onChange","e","newFormData","target","value","setState","onSubmit","logUser","props","preventDefault","this","isAuth","placeholder","minLength","Component","poropTypes","PropTypes","func","bool","body","JSON","stringify","loginUser","Register","password2","regUser","required","registerUser","Alerts","length","map","key","ProfileEditButtons","Dashboard","renderElements","getUserProfile","PrivateRoute","component","rest","render","CreateProfile","company","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocial","toggleSoacial","createProfile","undefined","withRouter","EditProfile","getCurrentProfileData","useState","setFormData","displaySocialInputs","toggleSocialInputs","useEffect","join","social","App","exact","path","Landing","CreatePrfile","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d24c5634.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\n\r\n/* action name creator */\r\nconst reducerName = 'alerts';\r\nconst createActionName = (name) => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\n\r\nexport const SET_ALERT = createActionName('SET_ALERT');\r\nexport const REMOVE_ALERT = createActionName('REMOVE_ALERT');\r\n\r\n/* action creators */\r\n\r\nexport const setAlertAction = (payload) => ({ payload, type: SET_ALERT });\r\nexport const removeAlertAction = (payload) => ({ payload, type: REMOVE_ALERT });\r\n\r\n/* actions THUNK */\r\n\r\nexport const setAlert = (msg, alertType) => {\r\n  return (dispatch) => {\r\n    const id = uuidv4();\r\n    dispatch(setAlertAction({ msg, alertType, id, name: 'SET_ALERT' }));\r\n    setTimeout(\r\n      () => dispatch(removeAlertAction({ id, name: 'REMOVE_ALERT' })),\r\n      5000\r\n    );\r\n  };\r\n};\r\n\r\n/* initial state */\r\nconst initialState = [];\r\n\r\n/* reducer */\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return [...state, action.payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== action.payload.id);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\n// set global default header for token stored in localstorage\r\nexport const setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n","import axios from 'axios';\r\nimport { setAlert } from './AlertReducer';\r\n// import { setAuthToken } from '../utils/utils';\r\n\r\n/* action name creator */\r\nconst reducerName = 'auth';\r\nconst createActionName = (name) => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\n\r\nexport const GET_PROFILE = createActionName('GET_PROFILE');\r\nexport const ERROR_PROFILE = createActionName('ERROR_PROFILE');\r\nexport const CLEAR_PROFILE = createActionName('CLEAR_PROFILE');\r\n\r\n/* action creators */\r\n\r\nexport const getProfileAction = (payload) => ({\r\n  payload,\r\n  type: GET_PROFILE,\r\n});\r\nexport const getProfileError = (payload) => ({\r\n  payload,\r\n  type: ERROR_PROFILE,\r\n});\r\nexport const clearProfileAction = (payload) => ({\r\n  payload,\r\n  type: CLEAR_PROFILE,\r\n});\r\n/* actions THUNK */\r\n\r\nexport const fetchCurrentUser = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.get('/api/profile/me');\r\n\r\n      dispatch(getProfileAction(res.data));\r\n    } catch (err) {\r\n      dispatch(\r\n        getProfileError({\r\n          msg: err.response.statusText,\r\n          status: err.response.status,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n// create/update profile\r\n// history will redirect\r\nexport const createUserProfile = (formData, history, edit = false) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const res = await axios.post('/api/profile', formData, config);\r\n      dispatch(getProfileAction(res.data));\r\n      dispatch(setAlert(edit ? 'Profile updated' : 'Profile created'));\r\n\r\n      if (!edit) {\r\n        history.push('/dashboard');\r\n      }\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n      dispatch(\r\n        getProfileError({\r\n          msg: err.response.statusText,\r\n          status: err.response.status,\r\n        })\r\n      );\r\n    }\r\n  };\r\n};\r\n\r\n/* initial state */\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [], //list of profiles\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\n/* reducer */\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // register\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false,\r\n      };\r\n    case ERROR_PROFILE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { setAlert } from './AlertReducer';\r\nimport { setAuthToken } from '../utils/utils';\r\nimport { clearProfileAction } from './ProfileReducer';\r\n\r\n/* action name creator */\r\nconst reducerName = 'auth';\r\nconst createActionName = (name) => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\n\r\nexport const REGISTER_SUCCESS = createActionName('REGISTER_SUCCESS');\r\nexport const REGISTER_FAIL = createActionName('REGISTER_FAIL');\r\nexport const USER_LOADED = createActionName('USER_LOADED');\r\nexport const AUTH_ERROR = createActionName('AUTH_ERROR');\r\nexport const LOGIN_SUCCESS = createActionName('LOGIN_SUCCESS');\r\nexport const LOGIN_FAIL = createActionName('LOGIN_FAIL');\r\nexport const LOGOUT = createActionName('LOGOUT');\r\nexport const CLEAR_PROFILE = createActionName('CLEAR_PROFILE');\r\n\r\n/* action creators */\r\n\r\nexport const registerSuccesAction = (payload) => ({\r\n  payload,\r\n  type: REGISTER_SUCCESS,\r\n});\r\nexport const registerFailAction = (payload) => ({\r\n  payload,\r\n  type: REGISTER_FAIL,\r\n});\r\nexport const userLoadSuccess = (payload) => ({\r\n  payload,\r\n  type: USER_LOADED,\r\n});\r\nexport const userAuthError = (payload) => ({\r\n  payload,\r\n  type: AUTH_ERROR,\r\n});\r\nexport const loginSuccesAction = (payload) => ({\r\n  payload,\r\n  type: LOGIN_SUCCESS,\r\n});\r\nexport const loginFailAction = (payload) => ({\r\n  payload,\r\n  type: LOGIN_FAIL,\r\n});\r\nexport const logoutAction = (payload) => ({\r\n  payload,\r\n  type: LOGOUT,\r\n});\r\n\r\n/* actions THUNK */\r\n//load user\r\nexport const loadUser = () => {\r\n  return async (dispatch) => {\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n      dispatch(userLoadSuccess(res.data));\r\n    } catch (err) {\r\n      dispatch(userAuthError({ name: 'AUTH_ERROR' }));\r\n    }\r\n  };\r\n};\r\n\r\n//post user\r\nexport const registerUser = ({ name, email, password }) => {\r\n  return async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const body = JSON.stringify({ name, email, password });\r\n    try {\r\n      const res = await axios.post('/api/users', body, config);\r\n\r\n      dispatch(loginSuccesAction(res.data));\r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n      dispatch(loginFailAction({ name: 'LOGIN_FAIL' }));\r\n    }\r\n  };\r\n};\r\n\r\n//login user\r\n\r\nexport const loginUser = (email, password) => {\r\n  return async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const body = JSON.stringify({ email, password });\r\n    try {\r\n      const res = await axios.post('/api/auth', body, config);\r\n\r\n      dispatch(registerSuccesAction(res.data));\r\n      dispatch(loadUser());\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n\r\n      if (errors) {\r\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n      dispatch(registerFailAction({ name: 'REGISTER_FAIL' }));\r\n    }\r\n  };\r\n};\r\n\r\n// logout & profile clear\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch(clearProfileAction());\r\n    dispatch(logoutAction({ name: 'LOGOUT' }));\r\n  };\r\n};\r\n\r\n/* initial state */\r\n\r\nconst initialState = {\r\n  //store token in localstorage\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\n/* reducer */\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    // register\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: null,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    //user loading\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\n// import { composeWithDevTools } from 'redu-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport alerts from './AlertReducer';\r\nimport auth from './AuthReducer';\r\nimport profile from './ProfileReducer';\r\n\r\n// initial state\r\nconst initialState = {};\r\n\r\n// define reducers\r\nconst reducers = {\r\n  auth,\r\n  alerts,\r\n  profile,\r\n};\r\n\r\n// add blank reducers for initial state properties without reducers\r\nObject.keys(initialState).forEach((item) => {\r\n  if (typeof reducers[item] == 'undefined') {\r\n    reducers[item] = (statePart = null) => statePart;\r\n  }\r\n});\r\n\r\n// combine reducers\r\nconst combinedReducers = combineReducers(reducers);\r\n\r\n//create store\r\nconst store = createStore(\r\n  combinedReducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({ auth: { isAuthenticated, loading }, userLogout }) => {\r\n  const authLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/posts'>Posts</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/dashboard'>\r\n          <i className='fas fa-user' />{' '}\r\n          <span className='hide-sm'>Dashboard</span>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <a onClick={userLogout} href='#!'>\r\n          <i className='fas fa-sign-out-alt' />{' '}\r\n          <span className='hide-sm'>Logout</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      <li>\r\n        <Link to='/profiles'>Developers</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/login'>Login</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n\r\n  return (\r\n    <nav className='navbar bg-dark'>\r\n      <h1>\r\n        <Link to='/'>\r\n          <i className='fas fa-code' /> DevConnector\r\n        </Link>\r\n      </h1>\r\n      {!loading && <div>{isAuthenticated ? authLinks : guestLinks}</div>}\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  userLogout: PropTypes.func,\r\n  auth: PropTypes.object,\r\n};\r\n\r\nexport default Header;\r\n","import { connect } from 'react-redux';\r\nimport { logoutUser } from '../../../redux/AuthReducer';\r\n\r\nimport Header from './Header.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  userLogout: () => dispatch(logoutUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from '../Header/HeaderContainer';\r\n\r\nimport '../../../styles/global.scss';\r\n\r\nconst MainLayout = ({ children }) => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <main>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainLayout.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <div className='dark-overlay'>\r\n        <div className='landing-inner'>\r\n          <h1 className='x-large'>Developer Connector</h1>\r\n          <p className='lead'>\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className='buttons'>\r\n            <Link to='/register' className='btn btn-primary'>\r\n              Sign Up\r\n            </Link>\r\n            <Link to='/login' className='btn btn-light'>\r\n              Login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    formData: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n  };\r\n\r\n  static poropTypes = {\r\n    logUser: PropTypes.func,\r\n    isAuth: PropTypes.bool,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    // setting formData in the state properly\r\n    const { formData } = this.state;\r\n    let newFormData = { ...formData };\r\n    newFormData[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formData: newFormData,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    const { email, password } = this.state.formData;\r\n    const { logUser } = this.props;\r\n    e.preventDefault();\r\n    logUser(email, password);\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state.formData;\r\n    const { isAuth } = this.props;\r\n\r\n    if (isAuth) {\r\n      return <Redirect to='/dashboard' />;\r\n    }\r\n\r\n    return (\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign In</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Sign Into Your Account\r\n        </p>\r\n        <form\r\n          className='form'\r\n          action='create-profile.html'\r\n          onSubmit={this.onSubmit}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              minLength='6'\r\n              value={password}\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Login' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Don't have an account? <Link to='/register'>Sign In</Link>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import { connect } from 'react-redux';\r\nimport { loginUser } from '../../../redux/AuthReducer';\r\n\r\nimport Login from './Login.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logUser: (name, email, password) =>\r\n    dispatch(loginUser(name, email, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    formData: {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      password2: '',\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    setAlert: PropTypes.func,\r\n    regUser: PropTypes.func,\r\n    isAuth: PropTypes.bool,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    // setting formData in the state properly\r\n    const { formData } = this.state;\r\n    let newFormData = { ...formData };\r\n    newFormData[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formData: newFormData,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    const { password, password2, name, email } = this.state.formData;\r\n    const { setAlert, regUser } = this.props;\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Password do not match', 'danger');\r\n    } else {\r\n      regUser({ name, email, password });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password, password2 } = this.state.formData;\r\n    const { isAuth } = this.props;\r\n\r\n    if (isAuth) {\r\n      return <Redirect to='/dashboard' />;\r\n    }\r\n    return (\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign Up</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Create Your Account\r\n        </p>\r\n        <form\r\n          className='form'\r\n          action='create-profile.html'\r\n          onSubmit={this.onSubmit}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Name'\r\n              name='name'\r\n              value={name}\r\n              onChange={this.onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={this.onChange}\r\n              required\r\n            />\r\n            <small className='form-text'>\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              minLength='6'\r\n              value={password}\r\n              onChange={this.onChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              name='password2'\r\n              value={password2}\r\n              onChange={this.onChange}\r\n              required\r\n              minLength='6'\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Register' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Already have an account? <Link to='/login'>Sign In</Link>\r\n        </p>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import { connect } from 'react-redux';\r\nimport { setAlert } from '../../../redux/AlertReducer';\r\nimport { registerUser } from '../../../redux/AuthReducer';\r\n\r\nimport Register from './Register.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuthenticated,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setAlert: (msg, alertType) => dispatch(setAlert(msg, alertType)),\r\n  regUser: (name, email, password) =>\r\n    dispatch(registerUser(name, email, password)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alerts = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlerts.propTypes = {\r\n  alerts: PropTypes.array,\r\n};\r\n\r\nexport default Alerts;\r\n","import { connect } from 'react-redux';\r\n// import { removeAlertAction } from '../../../redux/AlertReducer';\r\n\r\nimport Alerts from './Alerts.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alerts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alerts);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProfileEditButtons = () => {\r\n  return (\r\n    <div className='dash-buttons'>\r\n      <Link to='/edit-profile' className='btn btn-light'>\r\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\r\n      </Link>\r\n      <Link to='/add-experience' className='btn btn-light'>\r\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\r\n      </Link>\r\n      <Link to='/add-education' className='btn btn-light'>\r\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditButtons;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ProfileEditButtons from '../../common/Buttons/ProfileEditButtons';\r\n\r\nclass Dashboard extends Component {\r\n  static propTypes = {\r\n    getUserProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { getUserProfile } = this.props;\r\n    getUserProfile();\r\n  }\r\n\r\n  renderElements = () => {\r\n    const {\r\n      auth: { user },\r\n      profile: { profile, loading },\r\n    } = this.props;\r\n\r\n    if (loading && profile === null) {\r\n      return (\r\n        <div>\r\n          <h3>Loading Profile....</h3>\r\n        </div>\r\n      );\r\n    } else if (profile !== null) {\r\n      return (\r\n        <div>\r\n          <h1 className='large text-primary'>Dashboard</h1>\r\n          <p className='lead'>\r\n            <i className='fas fa-user'></i> Welcome {user && user.name}\r\n          </p>\r\n          <div>\r\n            <ProfileEditButtons />\r\n            <h2 className='my-2'>Experience Credentials</h2>\r\n            <table className='table'>\r\n              <thead>\r\n                <tr>\r\n                  <th>Company</th>\r\n                  <th className='hide-sm'>Title</th>\r\n                  <th className='hide-sm'>Years</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Tech Guy Web Solutions</td>\r\n                  <td className='hide-sm'>Senior Developer</td>\r\n                  <td className='hide-sm'>02-03-2009 - 01-02-2014</td>\r\n                  <td>\r\n                    <button className='btn btn-danger'>Delete</button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Traversy Media</td>\r\n                  <td className='hide-sm'>Instructor & Developer</td>\r\n                  <td className='hide-sm'>02-03-2015 - Now</td>\r\n                  <td>\r\n                    <button className='btn btn-danger'>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h2 className='my-2'>Education Credentials</h2>\r\n            <table className='table'>\r\n              <thead>\r\n                <tr>\r\n                  <th>School</th>\r\n                  <th className='hide-sm'>Degree</th>\r\n                  <th className='hide-sm'>Years</th>\r\n                  <th />\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Northern Essex</td>\r\n                  <td className='hide-sm'>Associates</td>\r\n                  <td className='hide-sm'>02-03-2007 - 01-02-2009</td>\r\n                  <td>\r\n                    <button className='btn btn-danger'>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <div className='my-2'>\r\n              <button className='btn btn-danger'>\r\n                <i className='fas fa-user-minus'></i>\r\n                Delete My Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 className='large text-primary'>Dashboard</h1>\r\n          <p className='lead'>\r\n            <i className='fas fa-user'></i> Welcome {user && user.name}\r\n          </p>\r\n          <div>\r\n            <p>You have no profile. Please create one</p>\r\n            <Link to='/create-profile' className='btn btn-primary my-1'>\r\n              Create Profile\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return <section className='container'>{this.renderElements()}</section>;\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from 'react-redux';\r\nimport { fetchCurrentUser } from '../../../redux/ProfileReducer';\r\n\r\nimport Dashboard from './Dashboard.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getUserProfile: () => dispatch(fetchCurrentUser()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n//component is prop from app.js <Route component={value}\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login' />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object,\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { connect } from 'react-redux';\r\n\r\nimport PrivateRoute from './PrivateRoute.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link, withRouter } from 'react-router-dom';\r\n\r\nclass CreateProfile extends Component {\r\n  state = {\r\n    formData: {\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: '',\r\n    },\r\n    displaySocial: false,\r\n  };\r\n\r\n  static propTypes = {\r\n    createProfile: PropTypes.func.isRequired,\r\n    history: PropTypes.any,\r\n  };\r\n\r\n  toggleSoacial = () => {\r\n    const { displaySocial } = this.state;\r\n    if (!displaySocial) {\r\n      this.setState({ displaySocial: true });\r\n    } else {\r\n      this.setState({ displaySocial: false });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    // setting formData in the state properly\r\n    const { formData } = this.state;\r\n    let newFormData = { ...formData };\r\n    newFormData[e.target.name] = e.target.value;\r\n    this.setState({\r\n      formData: newFormData,\r\n    });\r\n  };\r\n  onSubmit = (e) => {\r\n    const { createProfile, history } = this.props;\r\n    const { formData } = this.state;\r\n    e.preventDefault();\r\n    createProfile(formData, history);\r\n  };\r\n  render() {\r\n    const {\r\n      company,\r\n      website,\r\n      location,\r\n      status,\r\n      skills,\r\n      githubusername,\r\n      bio,\r\n      twitter,\r\n      facebook,\r\n      linkedin,\r\n      youtube,\r\n      instagram,\r\n    } = this.state.formData;\r\n    const { displaySocial } = this.state;\r\n    return (\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Create Your Profile</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Let's get some information to make\r\n          your profile stand out\r\n        </p>\r\n        <small>* = required field</small>\r\n        <form className='form' onSubmit={(e) => this.onSubmit(e)}>\r\n          <div className='form-group'>\r\n            <select name='status' value={status} onChange={this.onChange}>\r\n              <option value='0'>* Select Professional Status</option>\r\n              <option value='Developer'>Developer</option>\r\n              <option value='Junior Developer'>Junior Developer</option>\r\n              <option value='Senior Developer'>Senior Developer</option>\r\n              <option value='Manager'>Manager</option>\r\n              <option value='Student or Learning'>Student or Learning</option>\r\n              <option value='Instructor'>Instructor or Teacher</option>\r\n              <option value='Intern'>Intern</option>\r\n              <option value='Other'>Other</option>\r\n            </select>\r\n            <small className='form-text'>\r\n              Give us an idea of where you are at in your career\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Company'\r\n              name='company'\r\n              value={company}\r\n              onChange={this.onChange}\r\n            />\r\n            <small className='form-text'>\r\n              Could be your own company or one you work for\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Website'\r\n              name='website'\r\n              value={website}\r\n              onChange={this.onChange}\r\n            />\r\n            <small className='form-text'>\r\n              Could be your own or a company website\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Location'\r\n              name='location'\r\n              value={location}\r\n              onChange={this.onChange}\r\n            />\r\n            <small className='form-text'>\r\n              City & state suggested (eg. Boston, MA)\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='* Skills'\r\n              name='skills'\r\n              value={skills}\r\n              onChange={this.onChange}\r\n            />\r\n            <small className='form-text'>\r\n              Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Github Username'\r\n              name='githubusername'\r\n              value={githubusername}\r\n              onChange={this.onChange}\r\n            />\r\n            <small className='form-text'>\r\n              If you want your latest repos and a Github link, include your\r\n              username\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <textarea\r\n              placeholder='A short bio of yourself'\r\n              name='bio'\r\n              value={bio}\r\n              onChange={this.onChange}></textarea>\r\n            <small className='form-text'>Tell us a little about yourself</small>\r\n          </div>\r\n\r\n          <div className='my-2'>\r\n            <button\r\n              onClick={this.toggleSoacial}\r\n              type='button'\r\n              className='btn btn-light'>\r\n              Add Social Network Links\r\n            </button>\r\n            <span>Optional</span>\r\n          </div>\r\n          {displaySocial && (\r\n            <div>\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-twitter fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Twitter URL'\r\n                  name='twitter'\r\n                  value={twitter}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-facebook fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Facebook URL'\r\n                  name='facebook'\r\n                  value={facebook}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-youtube fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='YouTube URL'\r\n                  name='youtube'\r\n                  value={youtube}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-linkedin fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Linkedin URL'\r\n                  name='linkedin'\r\n                  value={linkedin}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n\r\n              <div className='form-group social-input'>\r\n                <i className='fab fa-instagram fa-2x'></i>\r\n                <input\r\n                  type='text'\r\n                  placeholder='Instagram URL'\r\n                  name='instagram'\r\n                  value={instagram}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <input type='submit' className='btn btn-primary my-1' />\r\n          <a className='btn btn-light my-1' href='/dashboard'>\r\n            Go Back\r\n          </a>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateProfile;\r\n","import { connect } from 'react-redux';\r\nimport { createUserProfile } from '../../../redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport CreateProfile from './CreateProfile.js';\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   profile: state.profile,\r\n//   auth: state.auth,\r\n// });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createProfile: (formData, history) =>\r\n    dispatch(createUserProfile(formData, history)),\r\n});\r\n\r\nexport default connect(\r\n  undefined,\r\n  mapDispatchToProps\r\n)(withRouter(CreateProfile));\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfileData,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfileData();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfileData: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default EditProfile;\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  createUserProfile,\r\n  fetchCurrentUser,\r\n} from '../../../redux/ProfileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport EditProfile from './EditProfile.js';\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  // auth: state.auth,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createProfile: (formData, history) =>\r\n    dispatch(createUserProfile(formData, history)),\r\n  getCurrentProfileData: () => dispatch(fetchCurrentUser()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(EditProfile));\r\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport MainLayout from '../src/components/layout/MainLayout/MainLayout';\nimport Landing from '../src/components/views/Landing/Landing';\nimport Login from '../src/components/features/Login/LoginContainer';\nimport Register from '../src/components/features/Register/RegisterContainer';\nimport Alerts from '../src/components/common/Alerts/AlertsContainer';\nimport Dashboard from '../src/components/views/Dashboard/DashboardContainer';\nimport PrivateRoute from '../src/components/common/Routing/PrivateRouteContainer';\nimport CreatePrfile from '../src/components/views/Profile/CreateProfileContainer';\nimport EditProfile from '../src/components/features/EditProfile/EditProfileContainer';\n\nimport { setAuthToken } from './utils/utils';\nimport { loadUser } from './redux/AuthReducer';\n\nconst App = () => {\n  useEffect(() => {\n    setAuthToken(localStorage.token);\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <div>\n        <BrowserRouter>\n          <MainLayout>\n            <Route exact path='/' component={Landing} />\n            <section className='container'>\n              <Alerts />\n              <Switch>\n                <Route exact path='/register' component={Register} />\n                <Route exact path='/login' component={Login} />\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\n                <PrivateRoute\n                  exact\n                  path='/create-profile'\n                  component={CreatePrfile}\n                />\n                <PrivateRoute\n                  exact\n                  path='/edit-profile'\n                  component={EditProfile}\n                />\n              </Switch>\n            </section>\n          </MainLayout>\n        </BrowserRouter>\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}